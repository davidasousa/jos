ECE 469 Lab 2: Memory Management
David Sousa & Yusuf Jarada

Answers To Questions:

A) The rows that have been filled out are:

Format: (Index : Virtual Address : Small Explanation)

0 : 0x1000 : Empty Memory
1 : UTEMP : Temporary Page Mappings During Memory Setup
956 : UPAGES : Read Only User Page Structure
959 : ULIM : Memory Mapped IO
960 : KERNBASE : Remapped Physical Memory
961 - 1023 : KERNBASE + Offset : Remapped Chunks Of Memory From 0 To KERNBASE, Now Mapped Above Kern Base. (Offset In Multiples 0f 0x400000)

B) Although the kernel and user environment are within the same memory region during memory setup, when the OS is fully transitioned into protected mode the permissions of each page will specify what the user can and cannot change, hence why page tables were set with PTE_U/PTE_W letting the OS know if the user has proper permissions. Detecting these bits will allow the kernel portion of the OS to remain protected. Segmentation or the process of running user programs in another portion of memory without directly rewriting the code also maintains that the non user portion will be preserverd across multiple users / usages.

C) The maximum amount of physical memory that JOS can support is npages * npages * PGSIZE as all virtual memory will be mapped to one of these pages regardless of the permission ring level. -> 1024 Pages * 1024 Pages * 4096 B ~ 4GB of memory present on JOS.

D) If we were using the maximum amount of physical memory for proper virtual memory management, the creation of one page being mapped to a virtual address would require a new page directory being created and marked present with a corresponding page table entry then with a full page being created itself. This means that for the allocation of one page there would be 3 full pages being created at the minimum which is 4 KB + 4 KB + 4 KB, which may be far greater than the actual space needed. Say we only needed 2 KB then we would be using 12 KB to properly page the newly created page.

E) We transition to an EIP above the Kernbase when real mode is transitioned to protected mode in the mapping of the virtual addresses to the physical addresses in the second portion of the mem_init function. Now at this point memory is taking place via virtual addressing and EIP can continue backtracing the instruction pointer above Kernbase as the proper virtual to physical mapping has been set up. This transition is nessecary to maintain the logical progression of the instruction pointer in the virtual address domain with proper segmentation and protections enabled.
